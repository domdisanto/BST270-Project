---
title: "BST 270: Final Project"
author: "Dominic DiSanto"
format:
   pdf:
     df-print: kable
     toc: true
     fig-pos: 'h'
  # html:
    # code-line-numbers: true
    # code-fold: true
    # df-print: kable
    # toc: true
  
execute:
  warning: false
  message: false
  echo: false
  
editor: visual
---

# Set-Up

```{r, echo=F}
# chunk to hide code and display at end, under Appendix Section A 
library(knitr)

delay_code_labels <- NULL
knit_hooks$set(delay = function(before, options, envir) {
    if (before) {
        delay_code_labels <<- append(delay_code_labels, options$label)
        return(NULL)  ## otherwise knitr will print delay_code_labels every time
    } else {

    }
})
opts_chunk$set(delay = TRUE, echo = FALSE, message = FALSE, warning = FALSE,
               fig.width = 6, fig.asp = 0.618)
```

```{r}
################ 
#### Set-Up ####
################

library(here) # used for file management
library(ggplot2) # data visualization 
library(dplyr) # data wrangling 
library(stringr) # data wrangling (string detection, manipulation)
library(kableExtra) # LaTeX/PDF table styling 
library(knitr)
```

# Preface

Tables were generated using the `kable` and `kableExtra` packages and dat visualizations using `ggplot2` from the Tidyverse. This document was generated using [Quarto](https://quarto.org/) in RStudio. Additional details are available in the Appendix (e.g. package versions, R/RStudio versions, etc.)

The `here` package has been used to load files, which *should* be robust to different operating systems, users, etc. as long as the file structure of this project (as described in the `README`) is followed. If issues persist, all specified file paths can be easily found searching for `here(` within this document and replacing with the user's preferred method of file path specification. 

Each article has a brief section that displays the original table(s) or figure from the table, my recreation of the same results, and a brief summary section commenting on the reproducibility

\newpage

# "Why Some Tennis Matches Take Forever"

From Carl Bialik's article ["Why Some Tennis Matches Take Forever"](https://fivethirtyeight.com/features/why-some-tennis-matches-take-forever/), we will recreate his two tables (included below).

```{r}
###################
### Data Import ###
###################

events <- read.csv(here("Data", "tennis-time", "events_time.csv"), header=T) %>% 
  mutate(Rank=row_number())

players <- read.csv(here("Data", "tennis-time", "players_time.csv")) %>% 
  mutate(Rank=row_number()) # adding the "Rank" variable (the integers in each table
            # above), descending (1=fastest player, lowest `seconds_added_per_point`)
```

## Table 1: Events

### Original

We will first look at the original table from Bialik's article:

```{r out.width="300px"}


###############
### Table 1 ### 
###############

# Original 
knitr::include_graphics(here("Images", "tennis-time", "bialik-tennis-time-table21.png"))

```

\newpage

### Re-creation

The data used to recreate these tables is located in Bialik's provided `events.csv` file.

```{r}
# Re-creation

events_10f <- events %>% 
  arrange(seconds_added_per_point) %>% 
  head(10)  %>% 
  mutate(seconds = # reformatting as string to include the "s" for first obs
           case_when(row_number()==1 ~ paste0(sprintf("%0.2f", seconds_added_per_point)
                                              , "s")
                     , seconds_added_per_point<0 ~ sprintf("%0.2f", seconds_added_per_point)
                     , T ~ paste0("+",
                          sprintf("%0.2f", seconds_added_per_point))
                     )
         ) %>% 
  select(Rank, tournament, surface, years, seconds)

events_10s <- events %>% 
  mutate(Rank=row_number()) %>% 
  arrange(desc(seconds_added_per_point)) %>% 
  head(10)  %>% 
  arrange(seconds_added_per_point) %>% 
  mutate(seconds = # reformatting as string to include the "s" for the first obs
           case_when(row_number()==1 ~ paste0("+"
                                        , sprintf("%0.2f", seconds_added_per_point)
                                              , "s")
                     , seconds_added_per_point<0 ~ sprintf("%0.2f", seconds_added_per_point)
                     , T ~ paste0("+", sprintf("%0.2f", seconds_added_per_point))
                     )
         ) %>% 
  select(Rank, tournament, surface, years, seconds)

events_ntbl <- events %>% 
  filter(str_detect(tournament, "US Op|Australian Open|Roland Garr")) %>% 
  mutate(seconds = # reformatting as string to include the "s" for the first obs
           case_when(row_number()==1 ~ paste0(sprintf("%0.2f", seconds_added_per_point), "s")
                     , seconds_added_per_point<0 ~ sprintf("%0.2f", seconds_added_per_point)
                     , T ~ paste0("+", sprintf("%0.2f", seconds_added_per_point))
                     )
         ) %>% 
  select(Rank, tournament, surface, years, seconds)

```

```{r}
event_cols <- c("", "Tournament", "Surface", "Years Running", "Time Added")

events_10f %>% 
  kable(col.names=event_cols
        # , bottomrule=''
        , booktabs=T
        ) %>%
  kable_styling(latex_options = "HOLD_position") %>% 
  add_header_above(c("Fastest tournaments"=5), align = "l"
                   , bold = T
                   , underline = F, line = F) 
```

```{r}
events_10s %>%   
  kable(col.names=event_cols
        # , bottomrule=''
        , booktabs=T
        ) %>%
  kable_styling(latex_options = "HOLD_position") %>% 
  add_header_above(c("Slowest tournaments"=5), align = "l"
                   , bold = T
                   , underline = F, line = F) 
```

```{r}
events_ntbl %>%
  kable(col.names=event_cols
        # , bottomrule=''
        , booktabs=T
        ) %>%
  kable_styling(latex_options = "HOLD_position") %>% 
  add_header_above(c("Other notable tournaments"=5), align = "l"
                   , bold = T
                   , underline = F, line = F) 
```

\newpage

## Table 2: Players

### Original

Again, we first we can review the original table(s) presented in the article:

```{r out.width="450px"}


###############
### Table 2 ### 
###############

# Original

knitr::include_graphics(here("Images", "tennis-time", "bialik-tennis-time-table1.png"))

```

\newpage

### Re-creation

Now we can begin attempting to recreate this table, doing our best to mirror the format of the 538 results shown above in structure/formatting.

We generate generate each of the three tables included in the image above, using the `players_time.csv` table. Player rank (the integer column) was generated as noted below, player name taken from the `player` column, and the added time from the `seconds_added_per_point` column:

```{r}
# Re-creation 

# Top 10 Fastest Players (lower/more negative seconds_added_per_point is faster pace)
t10_f <- players %>% 
  arrange(seconds_added_per_point) %>% # sort ascending 
  head(10) %>% # top 10
  mutate(seconds = # reformatting as above
           case_when(row_number()==1 ~ paste0(sprintf("%0.2f", seconds_added_per_point)
                                              , "s")
                     , T ~ sprintf("%0.2f"
                                   , seconds_added_per_point)
                     )
         ) %>% 
  select(Rank, player, seconds) 

# "Top" 10 slowest players (largest values)
t10_s <- players %>% 
  arrange(desc(seconds_added_per_point)) %>%
  head(10) %>%
  arrange(seconds_added_per_point) %>% 
  mutate(seconds =
           case_when(row_number()==1 ~ paste0(sprintf("%0.2f", seconds_added_per_point)
                                              , "s")
                     , seconds_added_per_point<0 ~ sprintf("%0.2f", seconds_added_per_point)
                     , T ~ paste0("+"
                              , sprintf("%0.2f", seconds_added_per_point))
                     )
         ) %>% 
  select(Rank, player, seconds) 

# Specific players ("notable") taken from the full data set
tbl_pls <- players %>% 
  filter(
    str_detect(player
, "Goran|Roger Fed|Novak Djok|Andy Murray|Pat Cash|Ivan Lend|Jim Courier|Jimmy Connors")) %>% 
  arrange(seconds_added_per_point) %>% 
  mutate(seconds =
           case_when(row_number()==1 ~ paste0(sprintf("%0.2f", seconds_added_per_point)
                                              , "s")
                     , seconds_added_per_point<0 ~ sprintf("%0.2f", seconds_added_per_point)
                     , T ~ paste0("+", sprintf("%0.2f", seconds_added_per_point))
                     )
         ) %>% 
  select(Rank, player, seconds) 


```

```{r}
#| layout-ncol: 2

t10_f %>% 
  kable(col.names=NULL
        # , bottomrule=''
        , booktabs=T
        ) %>%
  kable_styling(latex_options ="HOLD_position") %>% 
  add_header_above(c("Fastest players"=3)
                   , bold=T, align="l"
                   , underline=F, line=F
                   ) 

t10_s %>%   
  kable(col.names=NULL
        # , bottomrule=''
        , booktabs=T
        ) %>%
  kable_styling(latex_options ="HOLD_position") %>% 
  add_header_above(c("Slowest players"=3)
                   , bold=T, align="l"
                   , underline=F, line=F
                   ) 
```

```{r}
#| layout-ncol: 2

tbl_pls %>%
  kable(col.names=NULL
        # , bottomrule=''
        , booktabs=T
        ) %>%
  kable_styling(latex_options ="HOLD_position") %>% 
  add_header_above(c("Other notable players"=3)
                   , bold=T, align="l"
                   , underline=F, line=F
                   ) 
```

We see our results mirror those in Bialik's original article exactly, and we were able to easily identify and match the data to recreate these tables from the provided GitHub repository (even without any code given by the author).

<!-- We now must arrange the tables, set custom options to attempt to mirror the 538 style, and include the descriptive information to mirror the image as presented in Biakis's article. I use the `gt` package, which allows me to supply custom styling and arrange each individual table together into one image/table. -->

```{r, include=F}
# Initially used the gt package to create prettier HTML tables 
# The assignment prompt asks for a PDF, so keeping this code for reference
# but not including it in the final, knitted document 

library(gt)
library(gtExtras)

gt_fast <- t10_f %>% 
  gt() %>% 
  gt::tab_header("Fastest players") %>% 
  gt::tab_options(column_labels.hidden = T) %>% 
  gt_theme_538() %>% 
  gt::as_raw_html()

gt_slow <- t10_s %>% 
  gt() %>% 
  gt::tab_header("Slowest players") %>% 
  gt::tab_options(column_labels.hidden = T) %>% 
  gt_theme_538() %>% 
  gt::as_raw_html()


gt_ntbl <- tbl_pls %>% 
  gt() %>% 
  gt::tab_header("Other notable players") %>% 
  gt::tab_options(column_labels.hidden = T) %>% 
  gt_theme_538() %>% 
  gt::as_raw_html()

rbind(data.frame(t1=gt_fast, t2=gt_slow)
      , data.frame(t1=gt_ntbl, t2="")) %>%
# data.frame(gtf=c(gt_fast, gt_ntbl), gts=c(gt_slow, '')) %>%
  gt() %>%
  gt::tab_header(title = "Player Speeds"
                 , subtitle="Average time added per point in men's tennis"
                 ) %>%
  opt_align_table_header(align = "left") %>%
  fmt_markdown(columns=everything()) %>%
  gt::tab_options(column_labels.hidden=T) %>%
  gtExtras::gt_theme_538() %>%
  gt::tab_style(style = list(cell_text(weight="bold"))
                , location=cells_body(columns=1) )
```

\newpage

## Summary/Analysis

For Bialik's article on the pace of play in modern tennis, the data for the presented tables was immediately available and well-formatted to corroborate these results and easily output tables that are similar to those in Bialik's original article. The data used was sparse (with no additional information), which necessitated little documentation.

However considering the larger article, the two figures are presented without sufficient data to re-created. The provided data does not include any temporal data on player tendencies for the second figure, and the events data has been aggregated so that annual data is not available to create the first figure. The article also discusses regression modelling for pace of play but with no presentation of results or sharing of code to use in evaluating the model.

As an entertainment article, we obviously would not expect the same level of rigor for reproducibility as we might expect for a peer-reviewed publication or scientific article. The visualization and modelling are presented with no available data or thorough discussion of the methods to generate the results, while the tables in Bialik's article are easily reproduced from the shared materials.

\newpage

# "We Watched 906 Foul Balls To Find Out Where The Most Dangerous Ones Land"

Data and analysis presented from Annette Choi's article [We Watched 906 Fould Balls to Find Out Where the most Dangerous Ones Land](https://fivethirtyeight.com/features/we-watched-906-foul-balls-to-find-out-where-the-most-dangerous-ones-land/).

## Figure 2

### Original

```{r out.width="400px"}
knitr::include_graphics(here("Images", "foul-balls", "choi-foul-0625-2-1.png"))
```

\newpage

### Re-creation

```{r}
foul_balls <- read.csv(here("Data", "foul-balls", "foul-balls.csv"))
```

```{r fig.width=8, fig.pos="h"}
library(png); library(grid)

img <- readPNG(here("Images", "foul-balls", "stadium_zones.png"))
g <- rasterGrob(img, interpolate=TRUE)

foul_balls %>% 
  mutate(Velocity_Cat = 
           case_when(exit_velocity<90 ~ 1
                     , exit_velocity>=90 ~ 2
                     , TRUE ~ 3)
         , Zone_f = case_when(
           used_zone == 1 ~ "Zone 1"
           , TRUE ~ as.character(used_zone)
         )) %>% 
  mutate(fvc = factor(Velocity_Cat, levels=c(3, 2, 1))) %>% 
  ggplot(aes(x=reorder(as.factor(Zone_f), -used_zone), fill=fvc)) +
  geom_bar() +
  scale_y_continuous(breaks=seq(0, 250, 50)
                     , position="right") + 
  scale_fill_manual(values=c("snow3", "steelblue2", "palegreen3")) + 
  coord_flip() +
  ylab("") + xlab("") + 
  # ggthemes::theme_fivethirtyeight() +
  ggtitle(label="The hardest hit foul-balls seem to land in unprotected areas"
          , subtitle = "Foul balls by the stadium zone they landed in and their exit velocity, among 906\nfoul balls hit this season in the most foul-heavy day at the 10 MLB\nstadiums that produced the most fouls as of June 5") + 
  theme(legend.position="none", plot.title = element_text(size=16)
        , panel.background = element_rect(fill = 'white', color = 'white')
        , panel.grid.major.x = element_line(colour = "gray", linewidth = 0.5)
        , axis.text.y = element_text(face="bold", size = 12)
        , axis.text.x = element_text(color="gray", face="bold")
        , axis.ticks = element_blank()
        ) +
  annotation_custom(g, xmin=1, xmax=3, ymin=210, ymax=320) +
  annotate("text", x = 7, y = 75, label="< 90 mph", col="white", size=5) + 
  annotate("text", x = 7, y = 215, label="Unknown exit velocity", col="white", size=5) +
  annotate("text", x = 4.8, y = 140, label=("''>= 90 ~ 'mph'"), col="steelblue2", size=5, parse=T)
  
```

\newpage

## Summary/Analysis

For Annette Choi's article [We Watched 906 Fould Balls to Find Out Where the most Dangerous Ones Land](https://fivethirtyeight.com/features/we-watched-906-foul-balls-to-find-out-where-the-most-dangerous-ones-land/), I recreated only her final figure, which summarizes the landing spot of foul balls into Choi's defined "zones", startified by the exit velocity of the hit.

The data was immediately available and easy to use in generating this figure (i.e. only little wrangling necessary). The data contained three variables regarding the final "zones", with no indication in the article which was used to generate the figure (or in the analyses throughout the article). I settled on the `used_zone` variable, which uses the observed zone (`camera_zone`) of the foul ball when available and otherwise imputed a `predicted_zone` if the camera did not capture the final zone (and `camera_zone` was then missing). This imputation was discussed briefly in the article, but its use as the primary outcome variable was not mentioned explicitly in either the article or the figure.

Although I did not present the table and other figure, the table could be reproduced with the exception of the `stadium` column (although this could be inferred and created using the `matchup`'s home team). The ballpark figure could be recreated using the available data, although without shared code the method of creation of the ballpark figure is unknown and could only be approximated from the provided information.

\newpage

# Appendix

## A: Session Information

```{r}
sessionInfo()
```

## B: Code


```{r codeprint, echo = TRUE, eval = F, ref.label = delay_code_labels, delay = FALSE}
```


